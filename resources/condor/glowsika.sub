
hobohole = /data/sim/sim-new/ice/photonics-finebinned-standardcandle/hobohole
#dest = /data/uwa/jvansanten/projects/2012/muongun/corsika/SIBYLL/H
dest = $(hobohole)
outfile = DAT000000.i3.bz2
#tarball = /net/user/jvansanten/metaprojects/minisim/RHEL_5.0_amd64/simulation.trunk.r92403.Linux-x86_64.gcc-4.1.2.tar.gz
tarball = $(hobohole)/simulation.trunk.r92403.Linux-x86_64.gcc-4.1.2.tar.gz


script = python $I3_BUILD/MuonGun/resources/scripts/shower_and_propagate.py --nevents=1000 $(outfile)
args = -t $(tarball) -d $(dest) -o $(outfile) -- $(script)

Executable      = glowsika.sh
Universe        = vanilla
Notification    = never

Output          = logs/condor.$(Process).$(Cluster).out
Error           = logs/condor.$(Process).$(Cluster).error
Log             = /var/tmp/glowsika.log

Arguments       = $(args)

getenv          = False

# Stage DOE grid CA certs and user proxy certs to the node
# Everything else will be transferred via GridFTP
transfer_input_files = /data/sim/sim-new/downloads/doegrids.tar.gz, /tmp/x509up_u51509
should_transfer_files = NO

Requirements = ( ( Arch == "INTEL" || Arch == "X86_64" ) ) && ( TARGET.OpSys == "LINUX" )

queue
